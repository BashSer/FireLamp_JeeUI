[platformio]
data_dir  = ./data
default_envs = esp32
extra_configs =
  user_*.ini
  ci_envs.ini
; подключаем дополнительные конфиги platformio в виде user_*.ini файлов
; если вам нужна свой env для сборки, оформляйте его в виде доп ini файлов, они не будут обновляться из репозитория
; подробнее
; https://docs.platformio.org/en/latest/projectconf/section_platformio.html#extra-configs

; extra_scripts = !python LittleFSBuilder.py

[8266core]
;arduino_core_2_6_3 = espressif8266@2.3.3
;arduino_core_2_7_4 = espressif8266@2.6.2
arduino_core_3_0_0 = espressif8266@3.0.0
arduino_core_3_2_0 = espressif8266@3.2.0
arduino_core_4_1_0 = espressif8266@4.1.0

; build flags for 8266
[extra]
build_flags =
    !python git_rev_macro.py
    -DFASTLED_USE_PROGMEM=1
    -DFASTLED_NEEDS_YIELD=1
    -DFASTLED_ESP8266_RAW_PIN_ORDER
    -DEMBUI_IFACE_DYN_JSON_SIZE=2048
    -DEMBUI_SMALL_JSON_SIZE=768
    ; -DEMBUI_CFGSIZE=3072
    -DEMBUI_TZONE=TZ_Etc_GMT
    -DEMBUI_IDPREFIX='FireLamp-'
    -DEMBUI_USE_EXTERNAL_WS_BUFFER=2048
    -DEMBUI_USE_SSDP
    ;-DEMBUI_USE_UDP
    -DEMBUI_MQTT
    -DEMBUI_SSDP_NAME="FireLamp"
    ;-DEMBUI_SSDP_URLMODEL="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MODEL="FireLamp"
    ;-DEMBUI_SSDP_URLMANUF="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MANUF="kDn"

; build flags for esp32
[extra32]
build_src_flags =
    -std=gnu++14
build_unflags =
    -std=gnu++11
build_flags =
    !python git_rev_macro.py
    -DFZ_WITH_ASYNCSRV
    -DFZ_NOHTTPCLIENT
    ; -DEMBUI_IFACE_DYN_JSON_SIZE=2048
    ; -DEMBUI_SMALL_JSON_SIZE=768
    ; -DEMBUI_CFGSIZE=3072
    ;-DEMBUI_TZONE=TZ_Etc_GMT
    -DEMBUI_IDPREFIX='FireLamp-'
    -DEMBUI_USE_EXTERNAL_WS_BUFFER=4096
    -DEMBUI_USE_SSDP
    ;-DEMBUI_USE_UDP
    -DEMBUI_MQTT
    -DEMBUI_SSDP_NAME="FireLamp"
    ;-DEMBUI_SSDP_URLMODEL="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MODEL="FireLamp"
    ;-DEMBUI_SSDP_URLMANUF="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MANUF="kDn"
    ; -DLED_BUILTIN=2 ; нельзя использовать в глобальной конфигурации, т.к. конфликт с ESP32-C3 и ESP32-S2

[libs]
common =
    https://github.com/vortigont/EmbUI#v2.6
    https://github.com/DmytroKorniienko/DFRobotDFPlayerMini
    https://github.com/GyverLibs/microDS18B20#3.10
    https://github.com/GyverLibs/GyverButton
    https://github.com/FastLED/FastLED.git
esp8266 =
    ${libs.common}
    me-no-dev/ESPAsyncUDP
esp32 =
    ${libs.common}


[env]
framework = arduino
board_build.filesystem = littlefs
monitor_speed = 115200
upload_speed = 460800
monitor_flags =
  --quiet
  --echo
  --eol
    LF
;   --filter
;     colorize
  --filter
    time

[esp32_base]
framework = arduino
platform = espressif32
board_build.filesystem = littlefs
lib_ignore =
  ESPAsyncTCP
  LITTLEFS
  LittleFS_esp32
lib_deps =
    ${libs.esp32}
build_src_flags =
    ${extra32.build_src_flags}
build_unflags =
    ${extra32.build_unflags}
build_flags =
    ${extra32.build_flags}
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

; ESP8266 version
; собирается без возможности вывода отладочных сообщений через serial-порт для экономии ресурсов
; использовать для заливки в готовую лампу, если не собираетесь отлаживать ее работу
[env:esp8266]
platform = espressif8266
;platform = ${8266core.arduino_core_3_0_0}
board = d1_mini
board_build.ldscript = eagle.flash.4m2m.ld
build_flags =
    ${extra.build_flags}
;build_src_flags =
;    ${extra.build_src_flags}
;build_unflags =
;    ${extra.build_unflags}
lib_deps =
    ${libs.esp8266}
monitor_filters = esp8266_exception_decoder

; ESP8266 version "160MHz"
; сборка с разогном CPU до 160 MHz
[env:esp8266_160]
extends = env:esp8266
; set frequency to 160MHz
board_build.f_cpu = 160000000L


; ESP8266 debug version
[env:esp8266dev]
extends = env:esp8266
build_flags =
    ${extra.build_flags}
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG

[env:esp8266_160dev]
extends = env:esp8266dev
; set frequency to 160MHz
board_build.f_cpu = 160000000L

; ESP8266 debug version 3.0.0
;[env:esp8266dev30]
;extends = env:esp8266
;platform = espressif8266
;build_flags =
;    ${extra.build_flags}
;    -DLAMP_DEBUG=1 ;
;    -DEMBUI_DEBUG=1
;    ;-D_DEBUG ; DFPlayer debug
;    -DEMBUI_USE_SECHEAP=1
;    -DEMBUI_PUB_PERIOD=30 ; публикация значений время/память/ФС - каждые 30 секунд
;    -DFASTLED_ALLOW_INTERRUPTS=1
;    -DFASTLED_INTERRUPT_RETRY_COUNT=3
;    -DINTERRUPT_THRESHOLD=0
;    ;-DFASTLED_DEBUG_COUNT_FRAME_RETRIES=1
;    -DPIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED=1
;    -Dregister=
;    -DARDUINOJSON_USE_LONG_LONG=1
;lib_deps =
;    https://github.com/FastLED/FastLED.git
;    https://github.com/vortigont/EmbUI_int.git#dev
;    https://github.com/DmytroKorniienko/DFRobotDFPlayerMini


; ESP32 generic
[env:esp32]
extends = esp32_base
board = wemos_d1_mini32
board_build.partitions = esp32_4MiB.csv

; ESP32 with debug
[env:esp32debug]
extends = env:esp32
build_flags =
    ${extra32.build_flags}
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-D CORE_DEBUG_LEVEL=4
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1


[env:esp32s2]
extends = env:esp32
board = ttgo-t8-esp32-s2


;; OTA Upload example
;[env:ota]
;extends = esp32
;upload_protocol = custom
;; replace url with address of your esp32 device
;upload_port = http://firelamp/update
;extra_scripts =
;    post:post_flashz.py