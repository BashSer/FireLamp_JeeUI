[platformio]
data_dir  = ./data
default_envs = esp8266dev
extra_configs =
  user_*.ini
; подключаем дополнительные конфиги platformio в виде user_*.ini файлов
; если вам нужна свой env для сборки, оформляйте его в виде доп ini файлов, они не будут обновляться из репозитория
; подробнее
; https://docs.platformio.org/en/latest/projectconf/section_platformio.html#extra-configs

; extra_scripts = !python LittleFSBuilder.py

[extra]
build_flags =
    !python git_rev_macro.py
    -DFASTLED_USE_PROGMEM=1
    -DFASTLED_NEEDS_YIELD=1
    -DFASTLED_ESP8266_RAW_PIN_ORDER
    -DEMBUI_IFACE_DYN_JSON_SIZE=2048
    -DEMBUI_SMALL_JSON_SIZE=768
    ; -DEMBUI_CFGSIZE=3072
    -DEMBUI_TZONE=TZ_Etc_GMT
    -DEMBUI_IDPREFIX='FireLamp-'
    -DEMBUI_USE_EXTERNAL_WS_BUFFER=2048
    ; -DEMBUI_USE_SECHEAP
    -DEMBUI_USE_FTP
    -DEMBUI_USE_SSDP
    -DEMBUI_USE_UDP
    -DEMBUI_USE_MQTT
    -DEMBUI_SSDP_NAME="FireLamp"
    ;-DEMBUI_SSDP_URLMODEL="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MODEL="FireLamp"
    ;-DEMBUI_SSDP_URLMANUF="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MANUF="kDn"

[extra32]
build_flags =
    !python git_rev_macro.py
    ; -DFASTLED_USE_PROGMEM=1 ; не поддерживается ESP32
    ; -DEMBUI_IFACE_DYN_JSON_SIZE=2048
    ; -DEMBUI_SMALL_JSON_SIZE=768
    ; -DEMBUI_CFGSIZE=3072
    -DEMBUI_TZONE=TZ_Etc_GMT
    -DEMBUI_IDPREFIX='EmbUI_Device-'
    -DEMBUI_USE_EXTERNAL_WS_BUFFER=4096
    -DEMBUI_USE_FTP
    -DEMBUI_USE_SSDP
    -DEMBUI_USE_UDP
    -DEMBUI_USE_MQTT
    -DEMBUI_SSDP_NAME="FireLamp"
    ;-DEMBUI_SSDP_URLMODEL="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MODEL="FireLamp"
    ;-DEMBUI_SSDP_URLMANUF="https:__I(/)__I(/)github.com/DmytroKorniienko/FireLamp_EmbUI"
    -DEMBUI_SSDP_MANUF="kDn"
    ; -DLED_BUILTIN=2 ; нельзя использовать в глобальной конфигурации, т.к. конфликт с ESP32-C3 и ESP32-S2

[libs]
common =
    https://github.com/DmytroKorniienko/DFRobotDFPlayerMini
    https://github.com/GyverLibs/microDS18B20#3.10
esp8266 =
    ${libs.common}
    https://github.com/FastLED/FastLED.git#3.4.0 ; revert to 3.4.0 since now FastLed broken https://github.com/FastLED/FastLED/pull/1256#issuecomment-882602084
	https://github.com/vortigont/EmbUI_int.git
esp32 =
    ${libs.common}
    https://github.com/FastLED/FastLED.git
    https://github.com/plerup/espsoftwareserial.git ; отключить с выходом нового ядра (от него зависит DFPlayer, отключать нельзя)
    https://github.com/vortigont/EmbUI_int.git

[env]
framework = arduino
board_build.filesystem = littlefs
monitor_speed = 115200
upload_speed = 460800
monitor_flags =
  --quiet
  --echo
  --eol
    LF
;   --filter
;     colorize
  --filter
    time

[esp32_base]
framework = arduino
platform = espressif32
board_build.filesystem = littlefs
lib_ignore =
  ESPAsyncTCP
  LITTLEFS
  LittleFS_esp32
lib_deps =
    ${libs.esp32}
build_flags =
    ${extra32.build_flags}
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

; ESP8266 version
; собирается без возможности вывода отладочных сообщений через serial-порт для экономии ресурсов
; использовать для заливки в готовую лампу, если не собираетесь отлаживать ее работу
[env:esp8266]
platform = espressif8266@2.6.3
board = d1_mini
board_build.ldscript = eagle.flash.4m2m.ld
build_flags =
    ${extra.build_flags}
lib_deps =
    ${libs.esp8266}
monitor_filters = esp8266_exception_decoder

; ESP8266 version "160MHz"
; сборка с разогном CPU до 160 MHz
[env:esp8266@160]
extends = env:esp8266
; set frequency to 160MHz
board_build.f_cpu = 160000000L


; ESP8266 debug version
[env:esp8266dev]
extends = env:esp8266
build_flags =
    ${extra.build_flags}
    -DLAMP_DEBUG=1


; ESP8266 debug version 3.0.0
[env:esp8266dev30]
extends = env:esp8266
platform = espressif8266
build_flags =
    ${extra.build_flags}
    -DLAMP_DEBUG=1 ;
    -DEMBUI_DEBUG=1
    ;-D_DEBUG ; DFPlayer debug
    -DEMBUI_USE_SECHEAP=1
    -DEMBUI_PUB_PERIOD=30 ; публикация значений время/память/ФС - каждые 30 секунд
    -DFASTLED_ALLOW_INTERRUPTS=1
    -DFASTLED_INTERRUPT_RETRY_COUNT=3
    -DINTERRUPT_THRESHOLD=0
    ;-DFASTLED_DEBUG_COUNT_FRAME_RETRIES=1
    -DPIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED=1
    -Dregister=
    -DARDUINOJSON_USE_LONG_LONG=1
lib_deps =
    https://github.com/FastLED/FastLED.git
    https://github.com/vortigont/EmbUI_int.git#dev
    https://github.com/DmytroKorniienko/DFRobotDFPlayerMini




[env:esp32]
extends = esp32_base
board = wemos_d1_mini32
board_build.partitions = esp32_4MiB.csv
build_flags =
    ${extra32.build_flags}
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-D CORE_DEBUG_LEVEL=4
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1


[env:esp32s2]
framework = arduino
platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages =
    ;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.1
    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git

board = esp32dev
board_build.mcu = esp32s2
board_build.partitions = noota.csv
; board_build.flash_mode = qio
; build_type = debug
build_flags =
    ${extra32.build_flags}
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -DLED_BUILTIN=3
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG
    -DFASTLED_ALLOW_INTERRUPTS=0
    -DINTERRUPT_THRESHOLD=0    
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-DCORE_DEBUG_LEVEL=4
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ;${esp32_base.lib_deps}
    https://github.com/plerup/espsoftwareserial.git
    https://github.com/DmytroKorniienko/DFRobotDFPlayerMini
    https://github.com/andy040670/EmbUI_int.git#dev
    https://github.com/FastLED/FastLED.git
monitor_filters = esp32_exception_decoder
;extra_scripts = replace_fs.py
upload_protocol = esptool
upload_speed = 921600
monitor_port = COM11
upload_port = COM11

; debug_tool = jlink
; upload_protocol = jlink
debug_init_break = tbreak setup
; debug_speed = 5000

[env:esp32s3]
framework = arduino

;platform = espressif32
platform = https://github.com/tasmota/platform-espressif32/releases/download/v.2.0.3/platform-espressif32-v.2.0.3.zip

; platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
; platform_packages =
;      framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.3
;     ;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git


board_build.partitions = default_8MB.csv ; https://github.com/espressif/arduino-esp32/blob/master/tools/partitions
; board_upload.flash_size = 8MB
; board_upload.maximum_size = 8388608

board = esp32-s3-devkitc-1
;board_build.mcu = esp32s3
; board_build.flash_mode = qio
; build_type = debug
build_flags =
    ${extra32.build_flags}
    ; -DBOARD_HAS_PSRAM
    ; -mfix-esp32-psram-cache-issue
    -DLED_BUILTIN=2
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG
    ; -DFASTLED_ALLOW_INTERRUPTS=0
    ; -DINTERRUPT_THRESHOLD=0    
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-DCORE_DEBUG_LEVEL=3
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ${esp32_base.lib_deps}
    ; https://github.com/andy040670/EmbUI_int.git#dev
    ; https://github.com/FastLED/FastLED.git
    ; https://github.com/plerup/espsoftwareserial.git
    ; https://github.com/DmytroKorniienko/DFRobotDFPlayerMini
monitor_filters = esp32_exception_decoder
; extra_scripts = replace_fs.py
upload_protocol = esptool
monitor_speed = 460800 ; 115200 ;
upload_speed = 921600
monitor_port = COM19
upload_port = COM19
; monitor_flags =
;   --quiet
;   --echo
;   --eol
;     LF
;   --filter
;     colorize
;   --filter
;     time

; debug_tool = jlink
; upload_protocol = jlink
debug_init_break = tbreak setup
; debug_speed = 5000
